scalar DateTime

type User {
  id: Int

  createdAt: DateTime

  updatedAt: DateTime

  creator: Int

  updater: Int

  username: String

  password: String

  nickname: String

  email: String

  phone: String

  sex: Int

  age: Int

  admin: Int

  avatar: String

  organId: Int

  posts: [Int]

  roles: [Int]

  state: Int
}

input CreateUserInput {
  creator: Int

  updater: Int

  username: String

  password: String

  nickname: String

  email: String

  phone: String

  sex: Int

  age: Int

  admin: Int

  avatar: String

  organId: Int

  posts: [Int]

  roles: [Int]

  state: Int
}

input OrderByParams {
  field: String
  direction: String
}

input UpdateUserInput {
  id: Int

  creator: Int

  updater: Int

  username: String

  password: String

  nickname: String

  email: String

  phone: String

  sex: Int

  age: Int

  admin: Int

  avatar: String

  organId: Int

  posts: [Int]

  roles: [Int]

  state: Int
}

type Query {
  users(orderBy: OrderByParams): [User]!
  user(id: Int!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User
}
